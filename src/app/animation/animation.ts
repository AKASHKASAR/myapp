import { 
  trigger,
  state,
  style,
  transition,
  animate,
  keyframes,
  group
} from '@angular/animations';
 
export const Animations={    
  lightTrigger:trigger('lightOnOff',[
    state('off',style({
      background:'black'
    })),
    state('on',style({
      background:'white',
      width:'100px',
      height:'100px'
    })),
    transition('off=>on',[animate('6s',keyframes([
      style({
        backgroundColor:'white',
      }),
      style({
        transform:'rotate(60deg)',
        width:'100px'
      }),
      style({
        transform:'rotate(-45deg)',
        height:'100px'
      })
    ]))]),
    transition('on=>off',[animate('6s',keyframes([
      style({
        transform:'rotate(80deg)'
      }),
      style({
        width:'200px'
      }),
      style({
        height:'200px',
        background:'blue'
      })
    ]))])
  ])
  /*trigger('lightOnOff',[
    state('off',style({
      background:'black',
      borderRadius:'20px'
    })),
    state('on',style({
      background:'white',
      width:'50px',
      height:'50px',
      borderRadius:'50%'
    })),
    transition('off=>on',[animate('2s',style({
      background:'white',
      transform:'rotate(45deg)',
      width:'50px',
      height:'50px',
      borderRadius:'50%'
    }))]),
    transition('on=>off',[animate('2s',style({
      background:'black',
      width:'200px',
      height:'200px',
      borderRadius:'20px'
    }))])
  ]),*/,
  height:trigger('heightTrigger',[
    state('noHeight',style({
      height:'0'
    })),
    state('fullHeight',style({
      height:'*'
    })),
    transition('noHeight<=>fullHeight',[animate('2s')])
  ]),
  bgTrigger:trigger('bgChange',[
    state('bg1',style({
      backgroundColor:'crimson'
    })),
    state('bg2',style({
      backgroundColor:'green'
    })),
    transition('bg1=>bg2',[group([
      animate('4s ease',style({
          backgroundColor:'green'
      })),
      animate('2s ease-in',style({
        width:'400px'
      })),
      animate('6s ease-out',style({
        height:'400px'
      }))
    ])]),
    transition('bg2=>bg1',[group([
      animate('2s ease',style({
        transform:'rotate(45deg)'
      })),
      animate('4s ease-in-out',style({
        opacity:'0.4'
      })),
      animate('6s',style({
        width:'100px'
      }))
    ])])
  ]),
  /*flyTrigger:trigger('flyInOut',[
    transition(':enter',[animate('2s',style({
      transform:'translateX(500px)'
    }))]),
    transition(':leave',[animate('2s',style({
      opacity:'0'
    }))])
  ])*/
  flyTrigger:trigger('flyInOut',[
    transition('void=>*',[animate('6s',keyframes([
      style({
        opacity:'0',
        transform:'translateX(-100%)'
      }),
      style({
        opacity:'1',
        transform:'translateX(500px)'
      }),
      style({
        opacity:'1',
        transform:'translateX(0)'
      })
    ]))]),
    transition('*=>void',[animate('6s',keyframes([
      style({
        opacity:'1',
        transform:'translateX(0)'
      }),
      style({
        opacity:'1',
        transform:'translate(-500px)'
      }),
      style({
        opacity:'0',
        transform:'translateX(100%)'
      })
    ]))])
  ])
}